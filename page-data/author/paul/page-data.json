{"componentChunkName":"component---src-templates-author-js","path":"/author/paul/","webpackCompilationHash":"9f0fcf05ab26179fa4a2","result":{"data":{"ghostAuthor":{"slug":"paul","name":"Paul Bauriegel","bio":null,"cover_image":"http://localhost:2368/content/images/2019/02/hills-2836301_1920-1.jpg","profile_image":"http://localhost:2368/content/images/2019/02/paul.png","location":null,"website":null,"twitter":null,"facebook":null},"allGhostPost":{"edges":[{"node":{"id":"Ghost__Post__5c72f0fe08a656348e382ad0","title":"Android should not be called Open Source","slug":"android-open-source","featured":false,"feature_image":"https://images.unsplash.com/photo-1514417034809-c7b296354f07?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjExNzczfQ","excerpt":"Some years ago I used to be a passionate Android fan. I used to tell people, that phones running Android are a way better choice than iPhones. Mostly for a very simple reason: Android was Open Software and a very flexible system in general. iOS never has been. Now I think different.","custom_excerpt":"Some years ago I used to be a passionate Android fan. I used to tell people, that phones running Android are a way better choice than iPhones. Mostly for a very simple reason: Android was Open Software and a very flexible system in general. iOS never has been. Now I think different.","created_at_pretty":"24 February, 2019","published_at_pretty":"24 February, 2019","updated_at_pretty":"26 September, 2019","created_at":"2019-02-24T20:31:10.000+01:00","published_at":"2019-02-24T20:31:16.000+01:00","updated_at":"2019-09-26T11:01:24.000+02:00","meta_title":"Android should not be called Open Source","meta_description":"I used to be a passionate Android fan. I used to tell people, that phones running Android are a way better choice than iPhones. Now I think different.","og_description":null,"og_image":null,"og_title":null,"twitter_description":null,"twitter_image":null,"twitter_title":null,"authors":[{"name":"Paul Bauriegel","slug":"paul","bio":null,"profile_image":"http://localhost:2368/content/images/2019/02/paul.png","twitter":null,"facebook":null,"website":null}],"primary_author":{"name":"Paul Bauriegel","slug":"paul","bio":null,"profile_image":"http://localhost:2368/content/images/2019/02/paul.png","twitter":null,"facebook":null,"website":null},"primary_tag":{"name":"Android","slug":"android","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},"tags":[{"name":"Android","slug":"android","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"},{"name":"Technology","slug":"technology","description":null,"feature_image":null,"meta_description":null,"meta_title":null,"visibility":"public"}],"plaintext":"Why Android is no longer better than iOS\nSome years ago I used to be a passionate Android fan. I used to tell people,\nthat phones running Android are a way better choice than iPhones. Mostly for a\nvery simple reason: Android was Open Software and a very flexible system in\ngeneral. iOS never has been. Now I think different.\n\nWhy does it matter to have an open-source system\nI generally prefer to work with open software for multiple reasons, most of them\nare related to the flexibility that you have as a developer. As a user of\nopen-source software, you are indirectly profiting from that flexibility.\nOpen-source projects usually more customizable and give you more control over\nthe system itself. Especially when it comes to data privacy. Data privacy does\nconcern me in specific because I work a lot on data-driven projects.\nUnfortunately, that also triggers my imagination on how companies can misuse the\ndata we are offering them in exchange to use their services. They probably do\nnot, but once the data is transmitted, one cannot influence how the data is\nused. Especially with machine learning, there are som many ways to use the data\nfor unethical purposes. By using an open-source Android I can at least see how\nmy apps communicate and can influence what data they exchange.\n\nHowever, it has become increasingly difficult to keep using Android without\ngiving up control to Google's proprietary services. Up to a point where open\nsource Android does not provide the functionally to run the apps I want to use.\n\nA quick Android history review\nI started my Android journey in 2012 with an Xperia sola running on Gingerbread\nand two phones later I'm using now Android Pie. With each Android version,\nGoogle has integrated its proprietary code deeper and deeper into the system.\nAnd over the years it has become more and more uncomfortable to use Android\nwithout Google. Some apps are even unusable or non-functional because of their\ndependencies on the Google framework. Googles strategy behind its development of\nAndroid can be described by a concept known as Embrace, extend, extinguish. Let\nme break down what Google did with Android:\n\nEmbrace - Google acquired Android in 2005 to strengthen its mobile portfolio and\nget involved in the mobile operating system market. First, the OS was supposed\nto become similar to the Blackberry OS and after the appearance of the iPhone,\nGoogle decided to shift focus more towards touchscreens as well. Google then\nreleased Android as Open Source under the Android Open Source Project (AOSP) in\n2007. But in the same instant, they also founded the Open Handset Alliance (OHA)\nwhich forbids their members to produce devices for competing forms of Android.\nIn a nutshell, Google did develop a new open standard that allowed them and\ntheir partners to compete with Symbian, Blackberry and Apple. Back then Android\nused to be quite free software.\n\nExtend - At some point in 2011 the majority of devices got shipped with Android.\nSo in 2012 Google introduced their first version of their proprietary Google\nPlay Services. And from that point onwards Google began to implement features\noutside of the open-source project and building Android dependencies against\ntheir services. Making it harder to use solely the open-source parts of Android.\nThe tricky thing about the strategy is that all the fancy stuff comes only with\nGoogles proprietary Services. By now the ordinary user of an Android phone has a\nsystem that is dominated by proprietary Google apps and services. That includes\neven \"system\" apps like the Dialer, that used to part of the open-source system,\nand are now just another proprietary Google app. Some new software features like\nchild protection (Google Family)  even require to store your activity timeline\non Google servers to work. Following the evolution of Android, Google's\nmanufacturing partners became more and more depended on Android.\n\nExtinguish - Today Google's Android has a market share of 76% [Link]. Customers\nlove the fancy Google features like voice assistants, and even if they do not,\nthey still cannot use their apps without proprietary the Google framework.\nManufacturers have no choice than other than paying license fees to Google for\nthose services. An open alternative to Android does not exist and the OHA\ncontract conditions forbid its members to develop forks of Android. Meanwhile,\nGoogle makes some features of solely available for their own Pixel devices,\nexcluding other manufactures. And Trumps Huawei ban\n[https://www.scmp.com/news/china/article/3010868/google-suspends-some-business-huawei-wake-trump-trade-blacklist-source] \nshowed very recently how dependent hardware manufactures are to Google by now.\n\nGoogle will continue this strategy as the newest beta of Android Q shows, where\ne.g. Google Translate is integrated deeper into the Android system. Apart from\nthe underlying ASOP core, Android has become is as proprietary as iOS.\n\nBut you can use open source only Android, right?\nWell, you can yes, but .... you have to be a geek and you have to make quite a\nlot of sacrifices. In other words, you might no be able to use your phone in the\nway you used to use it.  A good example are messenger services like WhatsApp,\nTelegram or Signal. All of these require the Google Cloud Messaging (GCM). The\nidea behind GCM is quite clever. Instead of multiple apps pulling for new\nupdates, the Play service component informs the app when a package waits and\nonly then the app pulls for data. Especially for messenger that have small\nupdate intervals, that saves battery. But not only messenger apps use GCM,\nalmost any app that shows notifications uses this feature. GCM is only one of\nmany APIs that are used by apps for logins, maps and so on. And especially those\nother features have been my biggest big pain points since I'm running a fully\nopen-source version of Android for the last months.\n\nGetting an Android free from proprietary code involves two steps in general.\nPrimarily you need to replace your stock ROM - meaning your manufacturers\nversion of Android - with some AOSP fork like LineageOS or OmniRom. It sounds\nmore complicated than it is. Forums like XDA-Developers provide great\nstep-for-step guides. The only negative implications are a possible break of\nyour warranty and minor bugs within the system. The ROMs for common devices do\nhave only a few or no bugs at all. But if your device is not too common, there\nmight be no stable open-source fork containing all the necessary driver for your\nphone's hardware. Then there is no open-source Android for you at all.\n\nAs the second step is about resolving Androids dependencies to the Google Mobile\nServices. If you want to go fully open source the only possible alternative to\nthe propriety GApps is the incredible microG project. microG implements some of\nthe GMS API's - most importantly the GCM interface. However the only completely\nstable functionality is the cloud messaging, other APIs like maps or login are\nstill incomplete and may not works for all apps. If you depend on certain apps,\nthat require Google APIs that is a crucial problem. I had two apps I'm now using\non my work phone because they did not run without certain APIs currently\nincluded in microG and some other apps do lack some functionalities. Without a\nsecond phone, I would certainly switch to GApps in an instant.\n\nWhy it does not probably matter if you use iOS or Android anymore\nAndroid vs iOS  - I used to have a strong opinion on that - now I don't really\ncare anymore. I personally cannot use the current open-source Android as my\ndaily driver, without installing proprietary Google software.  So in terms of\ndata privacy, the OS doesn't make a difference to me anymore. Google and Apple\nmight give you options to opt-out of their data collection, but to which extend\nthat decision is respected is questionable\n[https://apnews.com/828aefab64d4411bac257a07c1af0ecb] and to use fancy features\nlike the inbuilt voice assistants you have to give up privacy anyway.  The only\nreason I still prefer Android over iOS are the magical possibilities that come\nwith the Magisk project. But that's because I still love to play with the\noperating system. That's something most people probably don't care about at all.\n\nWhat most people will see if they use iOS or Android is a proprietary system\nanyway.","html":"<h3 id=\"why-android-is-no-longer-better-than-ios\"><strong><strong>Why Android is no longer better than iOS</strong></strong></h3><p>Some years ago I used to be a passionate Android fan. I used to tell people, that phones running Android are a way better choice than iPhones. Mostly for a very simple reason: Android was Open Software and a very flexible system in general. iOS never has been. Now I think different.</p><h5 id=\"why-does-it-matter-to-have-an-open-source-system\"><strong><strong>Why does it matter to have an open-source system</strong></strong></h5><p>I generally prefer to work with open software for multiple reasons, most of them are related to the flexibility that you have as a developer. As a user of open-source software, you are indirectly profiting from that flexibility. Open-source projects usually more customizable and give you more control over the system itself. Especially when it comes to data privacy. Data privacy does concern me in specific because I work a lot on data-driven projects. Unfortunately, that also triggers my imagination on how companies can misuse the data we are offering them in exchange to use their services. They probably do not, but once the data is transmitted, one cannot influence how the data is used. Especially with machine learning, there are som many ways to use the data for unethical purposes. By using an open-source Android I can at least see how my apps communicate and can influence what data they exchange.</p><p>However, it has become increasingly difficult to keep using Android without giving up control to Google's proprietary services. Up to a point where open source Android does not provide the functionally to run the apps I want to use.</p><h5 id=\"a-quick-android-history-review\"><strong><strong>A quick Android history review</strong></strong></h5><p>I started my Android journey in 2012 with an Xperia sola running on Gingerbread and two phones later I'm using now Android Pie. With each Android version, Google has integrated its proprietary code deeper and deeper into the system. And over the years it has become more and more uncomfortable to use Android without Google. Some apps are even unusable or non-functional because of their dependencies on the Google framework. Googles strategy behind its development of Android can be described by a concept known as <strong>Embrace, extend, extinguish</strong>. Let me break down what Google did with Android:</p><p>Embrace - Google acquired Android in 2005 to strengthen its mobile portfolio and get involved in the mobile operating system market. First, the OS was supposed to become similar to the Blackberry OS and after the appearance of the iPhone, Google decided to shift focus more towards touchscreens as well. Google then released Android as Open Source under the Android Open Source Project (AOSP) in 2007. But in the same instant, they also founded the Open Handset Alliance (OHA) which forbids their members to produce devices for competing forms of Android. In a nutshell, Google did develop a new open standard that allowed them and their partners to compete with Symbian, Blackberry and Apple. Back then Android used to be quite free software.</p><p>Extend - At some point in 2011 the majority of devices got shipped with Android. So in 2012 Google introduced their first version of their proprietary Google Play Services. And from that point onwards Google began to implement features outside of the open-source project and building Android dependencies against their services. Making it harder to use solely the open-source parts of Android. The tricky thing about the strategy is that all the fancy stuff comes only with Googles proprietary Services. By now the ordinary user of an Android phone has a system that is dominated by proprietary Google apps and services. That includes even \"system\" apps like the Dialer, that used to part of the open-source system, and are now just another proprietary Google app. Some new software features like child protection (Google Family)  even require to store your activity timeline on Google servers to work. Following the evolution of Android, Google's manufacturing partners became more and more depended on Android.</p><p>Extinguish - Today Google's Android has a market share of 76% [Link]. Customers love the fancy Google features like voice assistants, and even if they do not, they still cannot use their apps without proprietary the Google framework. Manufacturers have no choice than other than paying license fees to Google for those services. An open alternative to Android does not exist and the OHA contract conditions forbid its members to develop forks of Android. Meanwhile, Google makes some features of solely available for their own Pixel devices, excluding other manufactures. And <a href=\"https://www.scmp.com/news/china/article/3010868/google-suspends-some-business-huawei-wake-trump-trade-blacklist-source\">Trumps Huawei ban</a> showed very recently how dependent hardware manufactures are to Google by now.</p><p>Google will continue this strategy as the newest beta of Android Q shows, where e.g. Google Translate is integrated deeper into the Android system. Apart from the underlying ASOP core, Android has become is as proprietary as iOS.</p><h5 id=\"but-you-can-use-open-source-only-android-right\"><strong><strong>But you can use open source only Android, right?</strong></strong></h5><p>Well, you can yes, <strong>but</strong> .... you have to be a geek and you have to make quite a lot of sacrifices. In other words, you might no be able to use your phone in the way you used to use it.  A good example are messenger services like WhatsApp, Telegram or Signal. All of these require the Google Cloud Messaging (GCM). The idea behind GCM is quite clever. Instead of multiple apps pulling for new updates, the Play service component informs the app when a package waits and only then the app pulls for data. Especially for messenger that have small update intervals, that saves battery. But not only messenger apps use GCM, almost any app that shows notifications uses this feature. GCM is only one of many APIs that are used by apps for logins, maps and so on. And especially those other features have been my biggest big pain points since I'm running a fully open-source version of Android for the last months.</p><p>Getting an Android free from proprietary code involves two steps in general. Primarily you need to replace your stock ROM - meaning your manufacturers version of Android - with some AOSP fork like LineageOS or OmniRom. It sounds more complicated than it is. Forums like XDA-Developers provide great step-for-step guides. The only negative implications are a possible break of your warranty and minor bugs within the system. The ROMs for common devices do have only a few or no bugs at all. But if your device is not too common, there might be no stable open-source fork containing all the necessary driver for your phone's hardware. Then there is no open-source Android for you at all.</p><p>As the second step is about resolving Androids dependencies to the Google Mobile Services. If you want to go fully open source the only possible alternative to the propriety GApps is the incredible microG project. microG implements some of the GMS API's - most importantly the GCM interface. However the only completely stable functionality is the cloud messaging, other APIs like maps or login are still incomplete and may not works for all apps. If you depend on certain apps, that require Google APIs that is a crucial problem. I had two apps I'm now using on my work phone because they did not run without certain APIs currently included in microG and some other apps do lack some functionalities. Without a second phone, I would certainly switch to GApps in an instant.</p><h5 id=\"why-it-does-not-probably-matter-if-you-use-ios-or-android-anymore\"><strong><strong>Why it does not probably matter if you use iOS or Android anymore</strong></strong></h5><p>Android vs iOS  - I used to have a strong opinion on that - now I don't really care anymore. I personally cannot use the current open-source Android as my daily driver, without installing proprietary Google software.  So in terms of data privacy, the OS doesn't make a difference to me anymore. Google and Apple might give you options to opt-out of their data collection, but to which extend that decision is respected is <a href=\"https://apnews.com/828aefab64d4411bac257a07c1af0ecb\">questionable</a> and to use fancy features like the inbuilt voice assistants you have to give up privacy anyway.  The only reason I still prefer Android over iOS are the magical possibilities that come with the Magisk project. But that's because I still love to play with the operating system. That's something most people probably don't care about at all.</p><p>What most people will see if they use iOS or Android is a proprietary system anyway.</p>","url":"http://localhost:2368/android-open-source/","uuid":"cb00204a-45c8-46b1-87b2-daac1640968c","page":false,"codeinjection_foot":null,"codeinjection_head":null,"codeinjection_styles":null,"comment_id":"5c72f0fe08a656348e382ad0"}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"paul","limit":12,"skip":0,"numberOfPages":1,"humanPageNumber":1,"prevPageNumber":null,"nextPageNumber":null,"previousPagePath":null,"nextPagePath":null}}}